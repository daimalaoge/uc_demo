{"version":3,"sources":["nprogress.js"],"names":["layui","define","exports","root","factory","this","initial","current","NProgress","Settings","settings","version","easing","minimum","positionUsing","speed","trickle","trickleRate","trickleSpeed","showSpinner","barSelector","n","min","max","toBarPerc","configure","options","key","value","undefined","hasOwnProperty","status","set","started","isStarted","clamp","progress","queue","next","getPositioningCSS","css","ease","barCSS","transform","margin-left","opacity","transition","setTimeout","remove","start","work","done","force","inc","Math","random","amount","$promise","state","render","fromStart","isRendered","document","getElementById","addClass","documentElement","id","createElement","perc","innerHTML","querySelector","template","bar","spinner","spinnerSelector","parent","body","appendChild","removeClass","style","vendorPrefix","bodyStyle","pending","fn","shift","length","push","cssProps","cssPrefixes","getStyleProp","name","replace","match","letter","toUpperCase","i","vendorName","capName","charAt","slice","getVendorProp","element","prop","properties","args","arguments","applyCss","hasClass","indexOf","classList","newList","oldList","className","substring","removeElement","parentNode","removeChild","amd","_typeof","module"],"mappings":"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","file":"nprogress.js","sourcesContent":["/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress\r\n * @license MIT */\r\nlayui.define(function (exports) {\r\n    (function (root, factory) {\r\n\r\n        if (typeof define === 'function' && define.amd) {\r\n            define(factory);\r\n        } else if (typeof exports === 'object') {\r\n            module.exports = factory();\r\n        } else {\r\n            root.NProgress = factory();\r\n        }\r\n\r\n    })(this, function () {\r\n        var NProgress = {};\r\n\r\n        NProgress.version = '0.2.0';\r\n\r\n        var Settings = NProgress.settings = {\r\n            minimum: 0.08,\r\n            easing: 'ease',\r\n            positionUsing: '',\r\n            speed: 200,\r\n            trickle: true,\r\n            trickleRate: 0.02,\r\n            trickleSpeed: 800,\r\n            showSpinner: true,\r\n            barSelector: '[role=\"bar\"]',\r\n            spinnerSelector: '[role=\"spinner\"]',\r\n            parent: 'body',\r\n            template: '<div class=\"bar\" role=\"bar\"><div class=\"peg\"></div></div><div class=\"spinner\" role=\"spinner\"><div class=\"spinner-icon\"></div></div>'\r\n        };\r\n\r\n        /**\r\n         * Updates configuration.\r\n         *\r\n         *     NProgress.configure({\r\n         *       minimum: 0.1\r\n         *     });\r\n         */\r\n        NProgress.configure = function (options) {\r\n            var key, value;\r\n            for (key in options) {\r\n                value = options[key];\r\n                if (value !== undefined && options.hasOwnProperty(key)) Settings[key] = value;\r\n            }\r\n\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Last number.\r\n         */\r\n\r\n        NProgress.status = null;\r\n\r\n        /**\r\n         * Sets the progress bar status, where `n` is a number from `0.0` to `1.0`.\r\n         *\r\n         *     NProgress.set(0.4);\r\n         *     NProgress.set(1.0);\r\n         */\r\n\r\n        NProgress.set = function (n) {\r\n            var started = NProgress.isStarted();\r\n\r\n            n = clamp(n, Settings.minimum, 1);\r\n            NProgress.status = (n === 1 ? null : n);\r\n\r\n            var progress = NProgress.render(!started),\r\n                bar = progress.querySelector(Settings.barSelector),\r\n                speed = Settings.speed,\r\n                ease = Settings.easing;\r\n\r\n            progress.offsetWidth; /* Repaint */\r\n\r\n            queue(function (next) {\r\n                // Set positionUsing if it hasn't already been set\r\n                if (Settings.positionUsing === '') Settings.positionUsing = NProgress.getPositioningCSS();\r\n\r\n                // Add transition\r\n                css(bar, barPositionCSS(n, speed, ease));\r\n\r\n                if (n === 1) {\r\n                    // Fade out\r\n                    css(progress, {\r\n                        transition: 'none',\r\n                        opacity: 1\r\n                    });\r\n                    progress.offsetWidth; /* Repaint */\r\n\r\n                    setTimeout(function () {\r\n                        css(progress, {\r\n                            transition: 'all ' + speed + 'ms linear',\r\n                            opacity: 0\r\n                        });\r\n                        setTimeout(function () {\r\n                            NProgress.remove();\r\n                            next();\r\n                        }, speed);\r\n                    }, speed);\r\n                } else {\r\n                    setTimeout(next, speed);\r\n                }\r\n            });\r\n\r\n            return this;\r\n        };\r\n\r\n        NProgress.isStarted = function () {\r\n            return typeof NProgress.status === 'number';\r\n        };\r\n\r\n        /**\r\n         * Shows the progress bar.\r\n         * This is the same as setting the status to 0%, except that it doesn't go backwards.\r\n         *\r\n         *     NProgress.start();\r\n         *\r\n         */\r\n        NProgress.start = function () {\r\n            if (!NProgress.status) NProgress.set(0);\r\n\r\n            var work = function () {\r\n                setTimeout(function () {\r\n                    if (!NProgress.status) return;\r\n                    NProgress.trickle();\r\n                    work();\r\n                }, Settings.trickleSpeed);\r\n            };\r\n\r\n            if (Settings.trickle) work();\r\n\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Hides the progress bar.\r\n         * This is the *sort of* the same as setting the status to 100%, with the\r\n         * difference being `done()` makes some placebo effect of some realistic motion.\r\n         *\r\n         *     NProgress.done();\r\n         *\r\n         * If `true` is passed, it will show the progress bar even if its hidden.\r\n         *\r\n         *     NProgress.done(true);\r\n         */\r\n\r\n        NProgress.done = function (force) {\r\n            if (!force && !NProgress.status) return this;\r\n\r\n            return NProgress.inc(0.3 + 0.5 * Math.random()).set(1);\r\n        };\r\n\r\n        /**\r\n         * Increments by a random amount.\r\n         */\r\n\r\n        NProgress.inc = function (amount) {\r\n            var n = NProgress.status;\r\n\r\n            if (!n) {\r\n                return NProgress.start();\r\n            } else {\r\n                if (typeof amount !== 'number') {\r\n                    amount = (1 - n) * clamp(Math.random() * n, 0.1, 0.95);\r\n                }\r\n\r\n                n = clamp(n + amount, 0, 0.994);\r\n                return NProgress.set(n);\r\n            }\r\n        };\r\n\r\n        NProgress.trickle = function () {\r\n            return NProgress.inc(Math.random() * Settings.trickleRate);\r\n        };\r\n\r\n        /**\r\n         * Waits for all supplied jQuery promises and\r\n         * increases the progress as the promises resolve.\r\n         *\r\n         * @param $promise jQUery Promise\r\n         */\r\n        (function () {\r\n            var initial = 0,\r\n                current = 0;\r\n\r\n            NProgress.promise = function ($promise) {\r\n                if (!$promise || $promise.state() === \"resolved\") {\r\n                    return this;\r\n                }\r\n\r\n                if (current === 0) {\r\n                    NProgress.start();\r\n                }\r\n\r\n                initial++;\r\n                current++;\r\n\r\n                $promise.always(function () {\r\n                    current--;\r\n                    if (current === 0) {\r\n                        initial = 0;\r\n                        NProgress.done();\r\n                    } else {\r\n                        NProgress.set((initial - current) / initial);\r\n                    }\r\n                });\r\n\r\n                return this;\r\n            };\r\n\r\n        })();\r\n\r\n        /**\r\n         * (Internal) renders the progress bar markup based on the `template`\r\n         * setting.\r\n         */\r\n\r\n        NProgress.render = function (fromStart) {\r\n            if (NProgress.isRendered()) return document.getElementById('nprogress');\r\n\r\n            addClass(document.documentElement, 'nprogress-busy');\r\n\r\n            var progress = document.createElement('div');\r\n            progress.id = 'nprogress';\r\n            progress.innerHTML = Settings.template;\r\n\r\n            var bar = progress.querySelector(Settings.barSelector),\r\n                perc = fromStart ? '-100' : toBarPerc(NProgress.status || 0),\r\n                parent = document.querySelector(Settings.parent),\r\n                spinner;\r\n\r\n            css(bar, {\r\n                transition: 'all 0 linear',\r\n                transform: 'translate3d(' + perc + '%,0,0)'\r\n            });\r\n\r\n            if (!Settings.showSpinner) {\r\n                spinner = progress.querySelector(Settings.spinnerSelector);\r\n                spinner && removeElement(spinner);\r\n            }\r\n\r\n            if (parent != document.body) {\r\n                addClass(parent, 'nprogress-custom-parent');\r\n            }\r\n\r\n            parent.appendChild(progress);\r\n            return progress;\r\n        };\r\n\r\n        /**\r\n         * Removes the element. Opposite of render().\r\n         */\r\n\r\n        NProgress.remove = function () {\r\n            removeClass(document.documentElement, 'nprogress-busy');\r\n            removeClass(document.querySelector(Settings.parent), 'nprogress-custom-parent');\r\n            var progress = document.getElementById('nprogress');\r\n            progress && removeElement(progress);\r\n        };\r\n\r\n        /**\r\n         * Checks if the progress bar is rendered.\r\n         */\r\n\r\n        NProgress.isRendered = function () {\r\n            return !!document.getElementById('nprogress');\r\n        };\r\n\r\n        /**\r\n         * Determine which positioning CSS rule to use.\r\n         */\r\n\r\n        NProgress.getPositioningCSS = function () {\r\n            // Sniff on document.body.style\r\n            var bodyStyle = document.body.style;\r\n\r\n            // Sniff prefixes\r\n            var vendorPrefix = ('WebkitTransform' in bodyStyle) ? 'Webkit' :\r\n                ('MozTransform' in bodyStyle) ? 'Moz' :\r\n                    ('msTransform' in bodyStyle) ? 'ms' :\r\n                        ('OTransform' in bodyStyle) ? 'O' : '';\r\n\r\n            if (vendorPrefix + 'Perspective' in bodyStyle) {\r\n                // Modern browsers with 3D support, e.g. Webkit, IE10\r\n                return 'translate3d';\r\n            } else if (vendorPrefix + 'Transform' in bodyStyle) {\r\n                // Browsers without 3D support, e.g. IE9\r\n                return 'translate';\r\n            } else {\r\n                // Browsers without translate() support, e.g. IE7-8\r\n                return 'margin';\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Helpers\r\n         */\r\n\r\n        function clamp(n, min, max) {\r\n            if (n < min) return min;\r\n            if (n > max) return max;\r\n            return n;\r\n        }\r\n\r\n        /**\r\n         * (Internal) converts a percentage (`0..1`) to a bar translateX\r\n         * percentage (`-100%..0%`).\r\n         */\r\n\r\n        function toBarPerc(n) {\r\n            return (-1 + n) * 100;\r\n        }\r\n\r\n\r\n        /**\r\n         * (Internal) returns the correct CSS for changing the bar's\r\n         * position given an n percentage, and speed and ease from Settings\r\n         */\r\n\r\n        function barPositionCSS(n, speed, ease) {\r\n            var barCSS;\r\n\r\n            if (Settings.positionUsing === 'translate3d') {\r\n                barCSS = { transform: 'translate3d(' + toBarPerc(n) + '%,0,0)' };\r\n            } else if (Settings.positionUsing === 'translate') {\r\n                barCSS = { transform: 'translate(' + toBarPerc(n) + '%,0)' };\r\n            } else {\r\n                barCSS = { 'margin-left': toBarPerc(n) + '%' };\r\n            }\r\n\r\n            barCSS.transition = 'all ' + speed + 'ms ' + ease;\r\n\r\n            return barCSS;\r\n        }\r\n\r\n        /**\r\n         * (Internal) Queues a function to be executed.\r\n         */\r\n\r\n        var queue = (function () {\r\n            var pending = [];\r\n\r\n            function next() {\r\n                var fn = pending.shift();\r\n                if (fn) {\r\n                    fn(next);\r\n                }\r\n            }\r\n\r\n            return function (fn) {\r\n                pending.push(fn);\r\n                if (pending.length == 1) next();\r\n            };\r\n        })();\r\n\r\n        /**\r\n         * (Internal) Applies css properties to an element, similar to the jQuery \r\n         * css method.\r\n         *\r\n         * While this helper does assist with vendor prefixed property names, it \r\n         * does not perform any manipulation of values prior to setting styles.\r\n         */\r\n\r\n        var css = (function () {\r\n            var cssPrefixes = ['Webkit', 'O', 'Moz', 'ms'],\r\n                cssProps = {};\r\n\r\n            function camelCase(string) {\r\n                return string.replace(/^-ms-/, 'ms-').replace(/-([\\da-z])/gi, function (match, letter) {\r\n                    return letter.toUpperCase();\r\n                });\r\n            }\r\n\r\n            function getVendorProp(name) {\r\n                var style = document.body.style;\r\n                if (name in style) return name;\r\n\r\n                var i = cssPrefixes.length,\r\n                    capName = name.charAt(0).toUpperCase() + name.slice(1),\r\n                    vendorName;\r\n                while (i--) {\r\n                    vendorName = cssPrefixes[i] + capName;\r\n                    if (vendorName in style) return vendorName;\r\n                }\r\n\r\n                return name;\r\n            }\r\n\r\n            function getStyleProp(name) {\r\n                name = camelCase(name);\r\n                return cssProps[name] || (cssProps[name] = getVendorProp(name));\r\n            }\r\n\r\n            function applyCss(element, prop, value) {\r\n                prop = getStyleProp(prop);\r\n                element.style[prop] = value;\r\n            }\r\n\r\n            return function (element, properties) {\r\n                var args = arguments,\r\n                    prop,\r\n                    value;\r\n\r\n                if (args.length == 2) {\r\n                    for (prop in properties) {\r\n                        value = properties[prop];\r\n                        if (value !== undefined && properties.hasOwnProperty(prop)) applyCss(element, prop, value);\r\n                    }\r\n                } else {\r\n                    applyCss(element, args[1], args[2]);\r\n                }\r\n            }\r\n        })();\r\n\r\n        /**\r\n         * (Internal) Determines if an element or space separated list of class names contains a class name.\r\n         */\r\n\r\n        function hasClass(element, name) {\r\n            var list = typeof element == 'string' ? element : classList(element);\r\n            return list.indexOf(' ' + name + ' ') >= 0;\r\n        }\r\n\r\n        /**\r\n         * (Internal) Adds a class to an element.\r\n         */\r\n\r\n        function addClass(element, name) {\r\n            var oldList = classList(element),\r\n                newList = oldList + name;\r\n\r\n            if (hasClass(oldList, name)) return;\r\n\r\n            // Trim the opening space.\r\n            element.className = newList.substring(1);\r\n        }\r\n\r\n        /**\r\n         * (Internal) Removes a class from an element.\r\n         */\r\n\r\n        function removeClass(element, name) {\r\n            var oldList = classList(element),\r\n                newList;\r\n\r\n            if (!hasClass(element, name)) return;\r\n\r\n            // Replace the class name.\r\n            newList = oldList.replace(' ' + name + ' ', ' ');\r\n\r\n            // Trim the opening and closing spaces.\r\n            element.className = newList.substring(1, newList.length - 1);\r\n        }\r\n\r\n        /**\r\n         * (Internal) Gets a space separated list of the class names on the element. \r\n         * The list is wrapped with a single space on each end to facilitate finding \r\n         * matches within the list.\r\n         */\r\n\r\n        function classList(element) {\r\n            return (' ' + (element.className || '') + ' ').replace(/\\s+/gi, ' ');\r\n        }\r\n\r\n        /**\r\n         * (Internal) Removes an element from the DOM.\r\n         */\r\n\r\n        function removeElement(element) {\r\n            element && element.parentNode && element.parentNode.removeChild(element);\r\n        }\r\n\r\n        return NProgress;\r\n    });\r\n\r\n    // layui.link(kitconfig.resourcePath + 'css/nprogress.css');\r\n    exports('nprogress');\r\n});"]}